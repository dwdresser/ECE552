$date
	Thu Feb  2 08:15:18 2017
$end
$version
	QuestaSim Version 10.4c
$end
$timescale
	1ns
$end

$scope module fulladder_bench $end
$var reg 17 ! A [16:0] $end
$var reg 17 " B [16:0] $end
$var reg 17 # Sumcalc [16:0] $end
$var wire 1 $ SUM [15] $end
$var wire 1 % SUM [14] $end
$var wire 1 & SUM [13] $end
$var wire 1 ' SUM [12] $end
$var wire 1 ( SUM [11] $end
$var wire 1 ) SUM [10] $end
$var wire 1 * SUM [9] $end
$var wire 1 + SUM [8] $end
$var wire 1 , SUM [7] $end
$var wire 1 - SUM [6] $end
$var wire 1 . SUM [5] $end
$var wire 1 / SUM [4] $end
$var wire 1 0 SUM [3] $end
$var wire 1 1 SUM [2] $end
$var wire 1 2 SUM [1] $end
$var wire 1 3 SUM [0] $end
$var wire 1 4 CO $end
$var wire 1 5 Clk $end
$var wire 1 6 rst $end
$var wire 1 7 err $end

$scope module my_clkrst $end
$var reg 1 8 clk $end
$var reg 1 9 rst $end
$var wire 1 7 err $end
$var integer 32 : cycle_count $end
$upscope $end

$scope module DUT $end
$var wire 1 ; A [15] $end
$var wire 1 < A [14] $end
$var wire 1 = A [13] $end
$var wire 1 > A [12] $end
$var wire 1 ? A [11] $end
$var wire 1 @ A [10] $end
$var wire 1 A A [9] $end
$var wire 1 B A [8] $end
$var wire 1 C A [7] $end
$var wire 1 D A [6] $end
$var wire 1 E A [5] $end
$var wire 1 F A [4] $end
$var wire 1 G A [3] $end
$var wire 1 H A [2] $end
$var wire 1 I A [1] $end
$var wire 1 J A [0] $end
$var wire 1 K B [15] $end
$var wire 1 L B [14] $end
$var wire 1 M B [13] $end
$var wire 1 N B [12] $end
$var wire 1 O B [11] $end
$var wire 1 P B [10] $end
$var wire 1 Q B [9] $end
$var wire 1 R B [8] $end
$var wire 1 S B [7] $end
$var wire 1 T B [6] $end
$var wire 1 U B [5] $end
$var wire 1 V B [4] $end
$var wire 1 W B [3] $end
$var wire 1 X B [2] $end
$var wire 1 Y B [1] $end
$var wire 1 Z B [0] $end
$var wire 1 $ SUM [15] $end
$var wire 1 % SUM [14] $end
$var wire 1 & SUM [13] $end
$var wire 1 ' SUM [12] $end
$var wire 1 ( SUM [11] $end
$var wire 1 ) SUM [10] $end
$var wire 1 * SUM [9] $end
$var wire 1 + SUM [8] $end
$var wire 1 , SUM [7] $end
$var wire 1 - SUM [6] $end
$var wire 1 . SUM [5] $end
$var wire 1 / SUM [4] $end
$var wire 1 0 SUM [3] $end
$var wire 1 1 SUM [2] $end
$var wire 1 2 SUM [1] $end
$var wire 1 3 SUM [0] $end
$var wire 1 4 CO $end
$var wire 1 [ carry_bits [2] $end
$var wire 1 \ carry_bits [1] $end
$var wire 1 ] carry_bits [0] $end

$scope module adder_1 $end
$var wire 1 G A [3] $end
$var wire 1 H A [2] $end
$var wire 1 I A [1] $end
$var wire 1 J A [0] $end
$var wire 1 W B [3] $end
$var wire 1 X B [2] $end
$var wire 1 Y B [1] $end
$var wire 1 Z B [0] $end
$var wire 1 ^ CI $end
$var wire 1 0 SUM [3] $end
$var wire 1 1 SUM [2] $end
$var wire 1 2 SUM [1] $end
$var wire 1 3 SUM [0] $end
$var wire 1 ] CO $end
$var wire 1 _ carry_bits [2] $end
$var wire 1 ` carry_bits [1] $end
$var wire 1 a carry_bits [0] $end

$scope module adder_1 $end
$var wire 1 J A $end
$var wire 1 Z B $end
$var wire 1 ^ Cin $end
$var wire 1 3 S $end
$var wire 1 a Cout $end
$var wire 1 b wire1 $end
$var wire 1 c wire2 $end
$var wire 1 d wire3 $end
$var wire 1 e wire4 $end

$scope module xor_1 $end
$var wire 1 J in1 $end
$var wire 1 Z in2 $end
$var wire 1 b out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 b in1 $end
$var wire 1 ^ in2 $end
$var wire 1 3 out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 J in1 $end
$var wire 1 Z in2 $end
$var wire 1 c out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ^ in1 $end
$var wire 1 b in2 $end
$var wire 1 d out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 c in1 $end
$var wire 1 d in2 $end
$var wire 1 a out $end
$upscope $end
$upscope $end

$scope module adder_2 $end
$var wire 1 I A $end
$var wire 1 Y B $end
$var wire 1 a Cin $end
$var wire 1 2 S $end
$var wire 1 ` Cout $end
$var wire 1 f wire1 $end
$var wire 1 g wire2 $end
$var wire 1 h wire3 $end
$var wire 1 i wire4 $end

$scope module xor_1 $end
$var wire 1 I in1 $end
$var wire 1 Y in2 $end
$var wire 1 f out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 f in1 $end
$var wire 1 a in2 $end
$var wire 1 2 out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 I in1 $end
$var wire 1 Y in2 $end
$var wire 1 g out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 a in1 $end
$var wire 1 f in2 $end
$var wire 1 h out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 g in1 $end
$var wire 1 h in2 $end
$var wire 1 ` out $end
$upscope $end
$upscope $end

$scope module adder_3 $end
$var wire 1 H A $end
$var wire 1 X B $end
$var wire 1 ` Cin $end
$var wire 1 1 S $end
$var wire 1 _ Cout $end
$var wire 1 j wire1 $end
$var wire 1 k wire2 $end
$var wire 1 l wire3 $end
$var wire 1 m wire4 $end

$scope module xor_1 $end
$var wire 1 H in1 $end
$var wire 1 X in2 $end
$var wire 1 j out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 j in1 $end
$var wire 1 ` in2 $end
$var wire 1 1 out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 H in1 $end
$var wire 1 X in2 $end
$var wire 1 k out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ` in1 $end
$var wire 1 j in2 $end
$var wire 1 l out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 k in1 $end
$var wire 1 l in2 $end
$var wire 1 _ out $end
$upscope $end
$upscope $end

$scope module adder_4 $end
$var wire 1 G A $end
$var wire 1 W B $end
$var wire 1 _ Cin $end
$var wire 1 0 S $end
$var wire 1 ] Cout $end
$var wire 1 n wire1 $end
$var wire 1 o wire2 $end
$var wire 1 p wire3 $end
$var wire 1 q wire4 $end

$scope module xor_1 $end
$var wire 1 G in1 $end
$var wire 1 W in2 $end
$var wire 1 n out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 n in1 $end
$var wire 1 _ in2 $end
$var wire 1 0 out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 G in1 $end
$var wire 1 W in2 $end
$var wire 1 o out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 _ in1 $end
$var wire 1 n in2 $end
$var wire 1 p out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 o in1 $end
$var wire 1 p in2 $end
$var wire 1 ] out $end
$upscope $end
$upscope $end
$upscope $end

$scope module adder_2 $end
$var wire 1 C A [3] $end
$var wire 1 D A [2] $end
$var wire 1 E A [1] $end
$var wire 1 F A [0] $end
$var wire 1 S B [3] $end
$var wire 1 T B [2] $end
$var wire 1 U B [1] $end
$var wire 1 V B [0] $end
$var wire 1 ] CI $end
$var wire 1 , SUM [3] $end
$var wire 1 - SUM [2] $end
$var wire 1 . SUM [1] $end
$var wire 1 / SUM [0] $end
$var wire 1 \ CO $end
$var wire 1 r carry_bits [2] $end
$var wire 1 s carry_bits [1] $end
$var wire 1 t carry_bits [0] $end

$scope module adder_1 $end
$var wire 1 F A $end
$var wire 1 V B $end
$var wire 1 ] Cin $end
$var wire 1 / S $end
$var wire 1 t Cout $end
$var wire 1 u wire1 $end
$var wire 1 v wire2 $end
$var wire 1 w wire3 $end
$var wire 1 x wire4 $end

$scope module xor_1 $end
$var wire 1 F in1 $end
$var wire 1 V in2 $end
$var wire 1 u out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 u in1 $end
$var wire 1 ] in2 $end
$var wire 1 / out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 F in1 $end
$var wire 1 V in2 $end
$var wire 1 v out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ] in1 $end
$var wire 1 u in2 $end
$var wire 1 w out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 v in1 $end
$var wire 1 w in2 $end
$var wire 1 t out $end
$upscope $end
$upscope $end

$scope module adder_2 $end
$var wire 1 E A $end
$var wire 1 U B $end
$var wire 1 t Cin $end
$var wire 1 . S $end
$var wire 1 s Cout $end
$var wire 1 y wire1 $end
$var wire 1 z wire2 $end
$var wire 1 { wire3 $end
$var wire 1 | wire4 $end

$scope module xor_1 $end
$var wire 1 E in1 $end
$var wire 1 U in2 $end
$var wire 1 y out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 y in1 $end
$var wire 1 t in2 $end
$var wire 1 . out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 E in1 $end
$var wire 1 U in2 $end
$var wire 1 z out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 t in1 $end
$var wire 1 y in2 $end
$var wire 1 { out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 z in1 $end
$var wire 1 { in2 $end
$var wire 1 s out $end
$upscope $end
$upscope $end

$scope module adder_3 $end
$var wire 1 D A $end
$var wire 1 T B $end
$var wire 1 s Cin $end
$var wire 1 - S $end
$var wire 1 r Cout $end
$var wire 1 } wire1 $end
$var wire 1 ~ wire2 $end
$var wire 1 !! wire3 $end
$var wire 1 "! wire4 $end

$scope module xor_1 $end
$var wire 1 D in1 $end
$var wire 1 T in2 $end
$var wire 1 } out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 } in1 $end
$var wire 1 s in2 $end
$var wire 1 - out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 D in1 $end
$var wire 1 T in2 $end
$var wire 1 ~ out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 s in1 $end
$var wire 1 } in2 $end
$var wire 1 !! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 ~ in1 $end
$var wire 1 !! in2 $end
$var wire 1 r out $end
$upscope $end
$upscope $end

$scope module adder_4 $end
$var wire 1 C A $end
$var wire 1 S B $end
$var wire 1 r Cin $end
$var wire 1 , S $end
$var wire 1 \ Cout $end
$var wire 1 #! wire1 $end
$var wire 1 $! wire2 $end
$var wire 1 %! wire3 $end
$var wire 1 &! wire4 $end

$scope module xor_1 $end
$var wire 1 C in1 $end
$var wire 1 S in2 $end
$var wire 1 #! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 #! in1 $end
$var wire 1 r in2 $end
$var wire 1 , out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 C in1 $end
$var wire 1 S in2 $end
$var wire 1 $! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 r in1 $end
$var wire 1 #! in2 $end
$var wire 1 %! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 $! in1 $end
$var wire 1 %! in2 $end
$var wire 1 \ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module adder_3 $end
$var wire 1 ? A [3] $end
$var wire 1 @ A [2] $end
$var wire 1 A A [1] $end
$var wire 1 B A [0] $end
$var wire 1 O B [3] $end
$var wire 1 P B [2] $end
$var wire 1 Q B [1] $end
$var wire 1 R B [0] $end
$var wire 1 \ CI $end
$var wire 1 ( SUM [3] $end
$var wire 1 ) SUM [2] $end
$var wire 1 * SUM [1] $end
$var wire 1 + SUM [0] $end
$var wire 1 [ CO $end
$var wire 1 '! carry_bits [2] $end
$var wire 1 (! carry_bits [1] $end
$var wire 1 )! carry_bits [0] $end

$scope module adder_1 $end
$var wire 1 B A $end
$var wire 1 R B $end
$var wire 1 \ Cin $end
$var wire 1 + S $end
$var wire 1 )! Cout $end
$var wire 1 *! wire1 $end
$var wire 1 +! wire2 $end
$var wire 1 ,! wire3 $end
$var wire 1 -! wire4 $end

$scope module xor_1 $end
$var wire 1 B in1 $end
$var wire 1 R in2 $end
$var wire 1 *! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 *! in1 $end
$var wire 1 \ in2 $end
$var wire 1 + out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 B in1 $end
$var wire 1 R in2 $end
$var wire 1 +! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 \ in1 $end
$var wire 1 *! in2 $end
$var wire 1 ,! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 +! in1 $end
$var wire 1 ,! in2 $end
$var wire 1 )! out $end
$upscope $end
$upscope $end

$scope module adder_2 $end
$var wire 1 A A $end
$var wire 1 Q B $end
$var wire 1 )! Cin $end
$var wire 1 * S $end
$var wire 1 (! Cout $end
$var wire 1 .! wire1 $end
$var wire 1 /! wire2 $end
$var wire 1 0! wire3 $end
$var wire 1 1! wire4 $end

$scope module xor_1 $end
$var wire 1 A in1 $end
$var wire 1 Q in2 $end
$var wire 1 .! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 .! in1 $end
$var wire 1 )! in2 $end
$var wire 1 * out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 A in1 $end
$var wire 1 Q in2 $end
$var wire 1 /! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 )! in1 $end
$var wire 1 .! in2 $end
$var wire 1 0! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 /! in1 $end
$var wire 1 0! in2 $end
$var wire 1 (! out $end
$upscope $end
$upscope $end

$scope module adder_3 $end
$var wire 1 @ A $end
$var wire 1 P B $end
$var wire 1 (! Cin $end
$var wire 1 ) S $end
$var wire 1 '! Cout $end
$var wire 1 2! wire1 $end
$var wire 1 3! wire2 $end
$var wire 1 4! wire3 $end
$var wire 1 5! wire4 $end

$scope module xor_1 $end
$var wire 1 @ in1 $end
$var wire 1 P in2 $end
$var wire 1 2! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 2! in1 $end
$var wire 1 (! in2 $end
$var wire 1 ) out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 @ in1 $end
$var wire 1 P in2 $end
$var wire 1 3! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 (! in1 $end
$var wire 1 2! in2 $end
$var wire 1 4! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 3! in1 $end
$var wire 1 4! in2 $end
$var wire 1 '! out $end
$upscope $end
$upscope $end

$scope module adder_4 $end
$var wire 1 ? A $end
$var wire 1 O B $end
$var wire 1 '! Cin $end
$var wire 1 ( S $end
$var wire 1 [ Cout $end
$var wire 1 6! wire1 $end
$var wire 1 7! wire2 $end
$var wire 1 8! wire3 $end
$var wire 1 9! wire4 $end

$scope module xor_1 $end
$var wire 1 ? in1 $end
$var wire 1 O in2 $end
$var wire 1 6! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 6! in1 $end
$var wire 1 '! in2 $end
$var wire 1 ( out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 ? in1 $end
$var wire 1 O in2 $end
$var wire 1 7! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 '! in1 $end
$var wire 1 6! in2 $end
$var wire 1 8! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 7! in1 $end
$var wire 1 8! in2 $end
$var wire 1 [ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module adder_4 $end
$var wire 1 ; A [3] $end
$var wire 1 < A [2] $end
$var wire 1 = A [1] $end
$var wire 1 > A [0] $end
$var wire 1 K B [3] $end
$var wire 1 L B [2] $end
$var wire 1 M B [1] $end
$var wire 1 N B [0] $end
$var wire 1 [ CI $end
$var wire 1 $ SUM [3] $end
$var wire 1 % SUM [2] $end
$var wire 1 & SUM [1] $end
$var wire 1 ' SUM [0] $end
$var wire 1 4 CO $end
$var wire 1 :! carry_bits [2] $end
$var wire 1 ;! carry_bits [1] $end
$var wire 1 <! carry_bits [0] $end

$scope module adder_1 $end
$var wire 1 > A $end
$var wire 1 N B $end
$var wire 1 [ Cin $end
$var wire 1 ' S $end
$var wire 1 <! Cout $end
$var wire 1 =! wire1 $end
$var wire 1 >! wire2 $end
$var wire 1 ?! wire3 $end
$var wire 1 @! wire4 $end

$scope module xor_1 $end
$var wire 1 > in1 $end
$var wire 1 N in2 $end
$var wire 1 =! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 =! in1 $end
$var wire 1 [ in2 $end
$var wire 1 ' out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 > in1 $end
$var wire 1 N in2 $end
$var wire 1 >! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 [ in1 $end
$var wire 1 =! in2 $end
$var wire 1 ?! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 >! in1 $end
$var wire 1 ?! in2 $end
$var wire 1 <! out $end
$upscope $end
$upscope $end

$scope module adder_2 $end
$var wire 1 = A $end
$var wire 1 M B $end
$var wire 1 <! Cin $end
$var wire 1 & S $end
$var wire 1 ;! Cout $end
$var wire 1 A! wire1 $end
$var wire 1 B! wire2 $end
$var wire 1 C! wire3 $end
$var wire 1 D! wire4 $end

$scope module xor_1 $end
$var wire 1 = in1 $end
$var wire 1 M in2 $end
$var wire 1 A! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 A! in1 $end
$var wire 1 <! in2 $end
$var wire 1 & out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 = in1 $end
$var wire 1 M in2 $end
$var wire 1 B! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 <! in1 $end
$var wire 1 A! in2 $end
$var wire 1 C! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 B! in1 $end
$var wire 1 C! in2 $end
$var wire 1 ;! out $end
$upscope $end
$upscope $end

$scope module adder_3 $end
$var wire 1 < A $end
$var wire 1 L B $end
$var wire 1 ;! Cin $end
$var wire 1 % S $end
$var wire 1 :! Cout $end
$var wire 1 E! wire1 $end
$var wire 1 F! wire2 $end
$var wire 1 G! wire3 $end
$var wire 1 H! wire4 $end

$scope module xor_1 $end
$var wire 1 < in1 $end
$var wire 1 L in2 $end
$var wire 1 E! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 E! in1 $end
$var wire 1 ;! in2 $end
$var wire 1 % out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 < in1 $end
$var wire 1 L in2 $end
$var wire 1 F! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ;! in1 $end
$var wire 1 E! in2 $end
$var wire 1 G! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 F! in1 $end
$var wire 1 G! in2 $end
$var wire 1 :! out $end
$upscope $end
$upscope $end

$scope module adder_4 $end
$var wire 1 ; A $end
$var wire 1 K B $end
$var wire 1 :! Cin $end
$var wire 1 $ S $end
$var wire 1 4 Cout $end
$var wire 1 I! wire1 $end
$var wire 1 J! wire2 $end
$var wire 1 K! wire3 $end
$var wire 1 L! wire4 $end

$scope module xor_1 $end
$var wire 1 ; in1 $end
$var wire 1 K in2 $end
$var wire 1 I! out $end
$upscope $end

$scope module xor_2 $end
$var wire 1 I! in1 $end
$var wire 1 :! in2 $end
$var wire 1 $ out $end
$upscope $end

$scope module nand_1 $end
$var wire 1 ; in1 $end
$var wire 1 K in2 $end
$var wire 1 J! out $end
$upscope $end

$scope module nand_2 $end
$var wire 1 :! in1 $end
$var wire 1 I! in2 $end
$var wire 1 K! out $end
$upscope $end

$scope module nand_3 $end
$var wire 1 J! in1 $end
$var wire 1 K! in2 $end
$var wire 1 4 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11010100100100 !
b101111010000001 "
bx #
18
19
b1 :
13
02
11
00
0/
1.
0-
1,
1+
1*
0)
0(
1'
0&
0%
1$
04
15
16
z7
0]
0\
1[
0a
0`
0_
1b
1c
1d
ze
0f
1g
1h
zi
1j
1k
1l
zm
0n
1o
1p
zq
0t
0s
0r
0u
1v
1w
zx
1y
1z
1{
z|
0}
1~
1!!
z"!
1#!
1$!
1%!
z&!
0)!
0(!
1'!
1*!
1+!
1,!
z-!
1.!
1/!
10!
z1!
02!
03!
14!
z5!
16!
17!
08!
z9!
1<!
1;!
1:!
0=!
0>!
1?!
z@!
1A!
1B!
0C!
zD!
1E!
1F!
0G!
zH!
0I!
1J!
1K!
zL!
1Z
0Y
0X
0W
0V
0U
0T
1S
0R
1Q
1P
1O
1N
0M
1L
0K
0J
0I
1H
0G
0F
1E
0D
0C
1B
0A
1@
0?
1>
1=
0<
0;
0^
$end
#50
08
05
b1001001110100101 #
#100
18
15
b1101011000001001 !
b101011001100011 "
b10 :
1Y
1U
1T
0S
0O
1J
0H
1G
0E
0B
1A
0=
1<
1;
1I!
0E!
0F!
0A!
0.!
0/!
0*!
1n
0j
0b
0c
06!
0#!
1}
1f
12
1-
0,
1(
18!
1a
03
01
10
0+
1(!
0*
1&
1C!
1%
1G!
0$
0K!
14
0;!
1)
02
0h
0[
0'
1`
0%
11
#150
08
05
b10010110001101100 #
#200
18
15
b111101100001101 !
b1001100110001101 "
b11 :
0Y
1X
1W
0U
0T
1S
1R
0Q
0P
1O
0L
1K
1H
1B
0@
1?
1=
0;
1A!
07!
0+!
0k
1E!
1F!
13!
1.!
1/!
1#!
0}
0y
0n
0o
0f
12
1h
1]
00
0.
0-
1,
0(!
1*
0'!
0:!
1%
1_
1)!
1[
0&
0C!
1;!
1'
0*
00!
10
1$
1K!
0(
0)
1/
0`
01
04
1(!
0%
0G!
1:!
1)
0$
0K!
14
#201
09
06
#250
08
05
b10001010010011010 #
#300
18
15
b1000010001100101 !
b101001000010010 "
b100 :
0Z
1Y
0X
0W
1V
0S
0R
1Q
0O
1L
0K
0G
1E
1D
0B
0A
1@
0?
0>
0=
0<
1;
0A!
1=!
1>!
12!
1}
1y
17!
1+!
0#!
1u
1o
1j
1k
1f
1b
1c
0a
13
0_
11
0]
0,
0)!
0[
1.
1-
0)
04!
0<!
1C!
0;!
1'!
1*
10!
00
0(!
1(
1%
1G!
0:!
1)
14!
0'!
1$
1K!
04
0(
#350
08
05
b1101011001110111 #
#400
18
15
b1110001100000001 !
b1100110100001101 "
b101 :
1Z
0Y
1X
1W
0V
1R
0Q
1P
1O
0N
1K
0H
0E
0D
1B
1A
0@
1=
1<
0E!
0F!
1A!
0+!
0}
0y
0I!
0J!
0=!
16!
0u
1n
0f
0b
0c
1a
03
10
0/
1(
0'
14
0$
0.
0-
1)!
1&
1:!
0%
1$
0*
00!
1(!
0)
04!
1'!
0(
08!
1[
1'
#450
08
05
b11011000000001110 #
#500
18
15
b1111000101110110 !
b1100110100111101 "
b110 :
1V
1U
0J
1I
1H
1F
1E
1D
0A
1>
1=!
0.!
1}
0z
0v
0j
0k
1f
1b
1c
0a
13
1_
01
1t
1s
1*
10!
0'
0?!
1<!
0(!
0!!
1.
00
0p
1]
1r
1)
14!
0&
0C!
1;!
0'!
1,
1/
1(
18!
1%
0[
1'
1?!
0<!
1&
1C!
0;!
0%
#550
08
05
b11011111010110011 #
#600
18
15
b101011111101101 !
b1111011110001100 "
b111 :
0Z
0V
0U
1S
1Q
0O
1N
1M
1J
0I
1G
0F
1C
1A
1@
0=
0;
1I!
1J!
02!
03!
0/!
0$!
0n
0o
0f
0=!
0>!
06!
1y
1z
1v
0t
0s
0(
1<!
0'
02
10
1p
1\
1(!
1'!
04
0$
0K!
14
1(
1+
0&
0C!
1-
1!!
0r
1;!
1%
0,
#650
08
05
b10100111101111001 #
#700
18
15
b1110100111111001 !
b10010011000110 "
b1000 :
1Y
0W
1T
0R
0Q
0N
0L
0K
0H
1F
0A
0@
1?
0>
1=
1;
0A!
0B!
16!
12!
13!
1u
1j
1k
1E!
1F!
1>!
1/!
1*!
1+!
0}
0~
1n
1o
1f
12
0]
00
0p
1r
0-
0)!
0+
0,!
0(!
0<!
0:!
0%
0G!
0_
11
0'!
1C!
10
1p
1:!
1)!
1,
#750
08
05
b10000111010111111 #
#800
18
15
b1000010011000101 !
b1101001010101010 "
b1001 :
0X
1W
1U
0T
1Q
0P
1N
0M
1L
1K
1H
0G
0F
0E
0B
1@
0?
0=
0<
06!
0*!
0u
0I!
0J!
1B!
1=!
1.!
1}
1~
0r
1-
0*
00!
1'
0;!
1$
1K!
0/
1+
1,!
0(
0)!
1%
1G!
1(!
0,
0)
04!
0:!
1*
10!
0(!
0$
1'!
1(
1)
14!
0'!
0(
#850
08
05
b10101011101101111 #
#900
18
15
b1111011111100101 !
b111001001110111 "
b1010 :
1Z
1X
0W
1V
1T
0S
1M
0K
1E
1B
1A
1>
1=
1<
0E!
0F!
0B!
0=!
0>!
0.!
0/!
1*!
0y
0z
1I!
1J!
1#!
1$!
0}
0~
1u
0n
0j
0k
0b
0c
1a
03
1_
01
1/
1r
0-
0\
04
1$
1s
0.
1(!
0*
1<!
0'
1;!
1:!
0$
0K!
1&
0)
04!
1-
0%!
02
0h
1`
1\
1'!
14
1(
0+
0,!
11
1)!
1*
#950
08
05
b10110101001011100 #
#1000
18
15
b1101011000010010 !
b1101101110001111 "
b1011 :
1W
0V
0U
0T
1S
1R
1O
0M
1K
0J
1I
0H
1F
0E
0D
0C
0B
0=
1j
1k
0f
0g
1b
1c
0I!
0J!
1B!
16!
1~
1z
1n
00
0p
0s
0r
0(
08!
0;!
1$
1K!
0a
13
1h
0_
01
0l
1_
0%
1[
1,
1%!
0-
1]
0/
0w
0\
1'
1+
1,!
1t
1.
0)!
0*
#1050
08
05
b11011000110100001 #
#1100
18
15
b110100111110010 !
b1001011011001110 "
b1100 :
0Z
1T
0R
1P
0O
0L
1E
1D
1C
1B
0A
0@
1?
0>
1=
0;
1I!
1J!
1A!
1=!
1>!
1.!
1/!
0#!
0$!
0~
1y
1E!
1F!
0b
03
0:!
1%
0.
0{
1r
1\
0(!
1*
0<!
0'
0?!
04
1<!
1)
14!
0+
0,!
1s
1-
1)!
0'!
0&
0C!
1;!
1(
18!
0*
00!
1(!
0[
0%
0G!
1:!
1'
1?!
0)
04!
1'!
0<!
0$
0K!
14
1&
1C!
0(
08!
1[
0;!
1%
1G!
0'
0?!
1<!
0:!
1$
1K!
0&
0C!
1;!
04
0%
0G!
1:!
0$
0K!
14
#1150
08
05
b10000000011000000 #
#1200
18
15
b111101011101000 !
b100111011000101 "
b1101 :
1Z
0Y
0W
1O
0N
1L
0K
0I
1G
0F
0B
1A
1>
0.!
0/!
0*!
0u
0I!
0E!
0F!
06!
07!
1g
1b
13
0`
1(
18!
1%
1G!
1$
1K!
1/
1w
1+
1,!
1*
10!
0)!
0t
04
11
1l
0_
1.
1{
0*
0s
10
1p
0]
0-
0/
#1250
08
05
b1100100110101101 #
#1300
18
15
b100100101011100 !
b10100010111101 "
b1110 :
1W
1V
1U
0T
0Q
0P
1M
0L
1H
1F
0E
0C
1B
0A
0>
0=
0=!
1*!
1#!
1$!
0v
0j
0k
1E!
1F!
02!
1/!
1}
1~
0n
0o
1]
00
0r
1-
0(!
14!
0:!
0%
0G!
1_
01
1t
0\
1'
1?!
0<!
0.
0{
10
1:!
0'!
1/
0(
1s
1&
1C!
0;!
0-
0!!
1r
1%
1G!
0:!
0,
0%!
1\
0$
0+
0,!
1)!
1*
#1350
08
05
b111001000011001 #
#1400
18
15
b101100000101101 !
b10011001100101 "
b1111 :
0W
0V
1T
0S
1Q
1P
0O
1J
0F
1E
0D
0B
1>
1=!
0*!
0y
0z
0b
0c
16!
17!
12!
1.!
0#!
1v
1n
1o
0]
00
0p
0t
1,
1%!
0*
00!
1)
0[
1(
1a
03
1{
1+
1,!
0)!
12
1(!
0\
1]
0+
0)
04!
1*
10!
0(!
1'!
0(
08!
1)
14!
0'!
1[
0'
0?!
1(
18!
0[
1<!
0&
0C!
1'
1?!
0<!
1;!
0%
0G!
1&
1C!
0;!
1:!
1$
1%
1G!
0:!
0$
#1450
08
05
b111111010010010 #
#1500
18
15
b110001001100011 !
b1000011100001010 "
b10000 :
0Z
1Y
0X
1W
0U
0T
1R
0M
1K
1I
0H
0G
1D
1A
0?
0>
1=
0=!
06!
0.!
0/!
0g
1I!
1*!
1y
1z
1k
1b
1c
0a
13
0_
0s
1.
1+
1$
1`
1(!
0*
0(
0'
0)
04!
11
1-
1!!
10
1p
02
0]
0r
1'!
1(
0,
0/
#1550
08
05
b1110100101101101 #
#1600
18
15
b10001010000000 !
b10000100100000 "
b10001 :
0Y
0W
1U
0Q
0P
1M
0K
0J
0I
0E
0D
1C
0<
0E!
1#!
0}
0b
0I!
0A!
0B!
02!
1.!
1/!
0n
1g
0`
00
0(!
1*
14!
1;!
0&
0$
03
0-
1,
0'!
01
0(
#1650
08
05
b100001110100000 #
#1700
18
15
b100010110101010 !
b1100110010011101 "
b10010 :
1Z
1X
1W
1V
0U
1S
0R
1P
1O
0M
1L
1K
1I
1G
1E
1B
0A
1@
0=
1<
0F!
03!
0.!
0o
1f
1I!
1B!
16!
0#!
0$!
1u
1j
1b
13
11
1/
1\
0,
1(
0;!
1$
12
1]
0*
1'!
1:!
0$
0K!
0(
08!
0/
0w
0%
0+
0,!
1)!
1t
1[
14
1'
0.
0{
1*
1s
1-
#1750
08
05
b10001001001000111 #
#1800
18
15
b11111010010110 !
b1011100000010011 "
b10011 :
1Y
0X
0W
0S
0P
1N
1M
0L
1H
0G
1F
0E
0B
1A
1?
1>
1=
0<
0B!
0>!
06!
07!
1.!
0*!
0y
0u
0v
1F!
12!
13!
1#!
1$!
1o
0f
0g
1`
02
0]
0\
1,
0'!
1)
0:!
1w
1.
1{
1,!
0*
00!
18!
1<!
1;!
1%
1&
1(!
0)!
0s
1$
1K!
01
0l
1_
04
0-
1*
10!
0)
04!
1'!
0(!
10
1)
14!
1(
0'!
0(
#1850
08
05
b1111011010101001 #
#1900
18
15
b11100000001101 !
b1101011001010011 "
b10100 :
1T
1Q
1P
0O
0M
1L
1J
0I
1G
0F
0C
0A
0@
0#!
1u
1v
1n
1f
1g
0b
0c
1E!
1A!
1B!
16!
17!
1}
1-
0[
1(
0;!
0&
0C!
1a
03
0`
00
0p
0t
1/
0,
0.
1]
11
1l
0h
1;!
0'
0%
0G!
1`
0_
0/
0w
1t
10
1p
01
0l
1:!
0$
0K!
1_
0]
1.
1/
1w
00
0p
14
1]
0t
0.
0/
0w
1t
1.
#1950
08
05
b10000111001100000 #
#2000
18
15
b1101110101101011 !
b10101011010101 "
b10101 :
0Y
1X
1S
0P
1O
0N
1M
0L
0K
1I
0H
1E
1D
1B
1@
0=
1<
1;
1*!
0}
0~
1y
1=!
1>!
06!
07!
1#!
1,
1[
0(
0<!
0.
0{
1r
0-
1+
0,
0%!
1s
1&
1C!
0?!
1<!
0;!
1-
1\
0+
0,!
1%
1G!
0&
0C!
1;!
0:!
1)!
0*
00!
1$
1K!
0%
0G!
1:!
04
1(!
0)
04!
0$
0K!
14
1'!
1(
#2050
08
05
b10000100001000000 #
#2100
18
15
b100101000000010 !
b11111010101110 "
b10110 :
0Z
1Y
1W
0V
1U
0T
1P
1N
0J
0G
0E
0D
0B
1A
0@
0>
0;
0I!
0.!
0/!
0*!
1~
0u
0f
0g
1c
0a
1h
1/
1w
0r
1+
1,!
1*
10!
1$
1K!
04
0)!
1,
1%!
0t
1.
1{
0\
0*
0+
0s
0-
#2150
08
05
b1000100010110000 #
#2200
18
15
b1110100100011101 !
b111001011001111 "
b10111 :
1Z
0U
1T
0P
0O
1L
1J
0I
1H
1G
1F
1B
0A
1=
1;
1I!
0A!
0B!
1.!
1/!
1*!
1u
0n
0o
0j
0k
1f
1g
0c
0E!
0F!
16!
17!
02!
1}
0y
0.
1-
1)
14!
0[
0(
08!
1%
1G!
1a
0`
1l
10
1p
0/
0w
1+
0(!
1*
1&
1C!
0$
0K!
14
0)
1t
0h
1[
0'!
1(
18!
1`
1.
11
0[
1'
1?!
0<!
0&
#2250
08
05
b10101101111101100 #
#2300
18
15
b100100100100011 !
b110010100001010 "
b11000 :
0Z
0X
0T
0S
1R
0Q
1P
0N
1I
0H
0G
0F
1E
0=
0;
0I!
1A!
1B!
1y
0u
1n
1o
0f
0g
0=!
12!
0.!
0*!
0+!
0#!
0}
1k
1b
1c
0a
13
0_
0-
0,
1)!
0+
1)
0'
1h
0]
1w
0.
0{
0;!
1&
1$
1K!
04
0%
1s
0t
1.
1{
1-
0s
0-
#2350
08
05
b1010111000101101 #
#2400
18
15
b101011001010 !
b100110000111100 "
b11001 :
0Y
1X
1V
1U
0R
1O
0M
0J
1G
0E
1D
1C
0B
1A
0<
1E!
1F!
1.!
1#!
1}
0n
0o
0b
0A!
06!
07!
1+!
1u
1j
1f
1g
0`
12
1/
0)!
1[
0(
0&
03
1]
00
1-
1,
0:!
1%
0$
0/
0w
1'
1t
0.
0{
1s
0-
0!!
1r
0,
0%!
1\
1+
#2450
08
05
b101011100000110 #
#2500
18
15
b1011110111110010 !
b110000110001010 "
b11010 :
1Y
0X
0V
0U
1S
1R
0P
0O
1M
0G
1F
1E
1B
0A
1@
1>
1=
1;
1I!
0B!
1=!
0.!
0+!
1n
1o
16!
17!
0#!
0$!
0j
0f
0g
1`
02
1,
1%!
0[
1(
0]
10
1)!
1;!
1$
0%
0G!
1/
1w
0t
1:!
0$
0K!
1.
1{
0s
14
1-
1!!
0r
0,
#2550
08
05
b10001111101111100 #
#2600
18
15
b1011001101000001 !
b11010011011000 "
b11011 :
0Y
1V
1T
0R
1P
1N
0L
1J
0I
0F
0E
0C
1A
0@
0?
06!
1.!
1#!
1$!
0y
1b
0E!
0=!
0>!
1*!
1+!
0}
0~
1g
0`
1r
0-
0)!
0+
0,!
1<!
0'
1%
1G!
13
0.
0\
0(
1+
1,!
0:!
1&
0%!
01
1\
1$
1K!
04
0+
0,!
1)!
0*
00!
1(!
0)
04!
1'!
1(
#2650
08
05
b1110100000011001 #
#2700
18
15
b1111001101111000 !
b1001010001001 "
b11100 :
1Z
0V
0T
1Q
0P
0M
0J
1G
1F
1E
1<
1E!
1y
0n
0o
1A!
1B!
02!
0.!
0/!
1}
1~
0r
1-
1*
10!
1)
14!
0;!
0&
0C!
1]
00
1.
0/
0w
1;!
0'!
1,
1%!
0\
0(
0%
0G!
1t
0.
0{
1:!
1+
1,!
0)!
0$
0K!
1s
0-
0!!
14
0*
1r
0,
0%!
1\
0+
0,!
1)!
1*
#2750
08
05
b10000011000000001 #
#2800
18
15
b110111101011 !
b110010110110110 "
b11101 :
0Z
1Y
1X
0W
1V
1U
1R
0Q
1P
0N
1M
1L
1J
1I
0F
1C
0A
1@
1?
0>
0=
0<
0;
0I!
16!
03!
0#!
0$!
0g
1>!
1/!
0*!
0+!
0y
0z
1n
1o
1j
11
0]
10
1.
1{
1+
1,!
0(!
0<!
1`
1,
1%!
1'!
1$
1K!
04
08!
01
0l
1&
1C!
0)
1/
1w
0t
0;!
1_
1[
1'
00
0p
1%
1G!
0.
0:!
1]
0/
0w
0$
1t
1.
#2850
08
05
b111001110100001 #
#2900
18
15
b1111100111000110 !
b1001110101110 "
b11110 :
1W
0V
1Q
0P
1N
0M
0L
0J
1H
0G
0E
0@
1>
1=
1<
1;
1I!
0>!
1y
1z
0j
0k
0b
13!
1.!
0u
1/
1w
0*
00!
0'!
03
11
1l
0s
0.
0{
1<!
1$
0&
0C!
1s
1(
18!
1(!
0t
1.
1{
1)
0[
1;!
0%
0G!
0'
0s
1-
1!!
1:!
0$
0K!
0r
0,
14
#2950
08
05
b10000110101110100 #
#3000
18
15
b1010111100 !
b1101110100101010 "
b11111 :
0X
0S
0Q
1P
1O
1L
1K
0I
1G
1F
1E
0D
0B
1A
0?
0>
0=
0<
0;
0A!
1=!
1>!
1*!
1+!
0}
0y
0z
1u
0n
0o
1f
1g
12!
1#!
1$!
1j
1k
0_
01
0l
0\
1,
0)
04!
0`
12
1p
0/
0w
1s
0.
0)!
0<!
1'
1C!
0;!
1*
10!
1t
11
1l
1'!
0(
08!
1.
0(!
1%
1G!
0:!
1)
14!
1[
0'
0?!
0'!
1$
1K!
04
1(
18!
1<!
1&
0[
1'
1?!
0<!
0&
#3050
08
05
b1101111111100110 #
#3100
18
15
b1001101000001011 !
b1011111001110001 "
b100000 :
1Z
0Y
0W
1V
1T
0R
1Q
1M
0L
1J
1I
0H
0F
0E
0C
1?
1>
1;
0I!
0J!
0=!
0>!
06!
07!
0#!
1y
1z
0j
0c
0E!
1A!
0.!
0/!
0*!
1}
1n
1o
0]
10
0-
0!!
0+
1(!
0*
1&
0%
1a
01
0s
0.
0{
0,
1[
0(
1<!
14
0$
0&
0C!
1s
02
0h
0)
04!
1r
1/
1w
0t
1,
1'!
1`
1;!
1%
11
1(
1.
1{
0s
1-
1!!
0r
0,
#3150
08
05
b10101100001111100 #
